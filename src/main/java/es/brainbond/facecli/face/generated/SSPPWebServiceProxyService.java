package es.brainbond.facecli.face.generated;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.2
 * 2015-08-27T09:33:19.255+02:00
 * Generated source version: 3.1.2
 * 
 */
@WebServiceClient(name = "SSPPWebServiceProxyService", 
                  wsdlLocation = "classpath:sspp2.wsdl",
                  targetNamespace = "https://webservice.face.gob.es") 
public class SSPPWebServiceProxyService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://webservice.face.gob.es", "SSPPWebServiceProxyService");
    public final static QName SSPPWebServiceProxyPort = new QName("https://webservice.face.gob.es", "SSPPWebServiceProxyPort");
    static {
        URL url = SSPPWebServiceProxyService.class.getClassLoader().getResource("sspp2.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(SSPPWebServiceProxyService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:sspp2.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public SSPPWebServiceProxyService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SSPPWebServiceProxyService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SSPPWebServiceProxyService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SSPPWebServiceProxyService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SSPPWebServiceProxyService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SSPPWebServiceProxyService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns SSPPWebServiceProxyPort
     */
    @WebEndpoint(name = "SSPPWebServiceProxyPort")
    public SSPPWebServiceProxyPort getSSPPWebServiceProxyPort() {
        return super.getPort(SSPPWebServiceProxyPort, SSPPWebServiceProxyPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SSPPWebServiceProxyPort
     */
    @WebEndpoint(name = "SSPPWebServiceProxyPort")
    public SSPPWebServiceProxyPort getSSPPWebServiceProxyPort(WebServiceFeature... features) {
        return super.getPort(SSPPWebServiceProxyPort, SSPPWebServiceProxyPort.class, features);
    }

}
